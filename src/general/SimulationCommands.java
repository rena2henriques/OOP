package general;

/**
 * SimulationCommands contains the generators of numbers that implement the interface INumberGenerator necessary to run a simulation.
 * The generators are stored in an Array.
 * <p>
 * They may be related to the the generation of the time between the events, for instance,
 * or to any other generation of numbers necessary to the evolution of the simulation.
 * <p>
 * The commands are received in the constructor, so that is the responsibility of the user to define the order 
 * in which the generators are stored and so that the access to each generator is correctly done through the getCommand method. 
 * 
 * @see INumberGenerator
 *
 */
public class SimulationCommands {
	
	/**
	 * Array with the number generators.
	 */
	protected INumberGenerator[] commands;

	/**
	 * Constructor. 
	 * Creates a SimulationCommands with the specified Number Generators.
	 * 
	 * @param commands - Array with the number generators that command the simulation
	 */
	public SimulationCommands(INumberGenerator[] commands){
		this.commands=commands;
	}
	
	/**
	 * Returns the number generated by the generator in the position i of the commands array.
	 * 
	 * @param i - index of the generator in the commands array
	 * @return the number generated by the specified generator.
	 */
	public double getCommand(int i){
		double nr=0;
		try {
			nr = commands[i].getNumber();
		} catch(ArrayIndexOutOfBoundsException e) {
			System.out.println("Trying to access a command that does not exist");
			System.exit(-1);
		}
		return nr;
	}

}
